function game2048
clc;clear;
global GUI;
global score;
global best;
global gameover;
global squaremap;
global colorlist;
global fontsizelist;

global drawBkgHdl;
global drawSquareBkgHdl;
global drawSquareHdl;

global GameOver1;
global GameOver2;

global Restart1;
global Text2048;

global controlUp;
global controlDown;
global controlRight;
global controlLeft;

global textScore1;
global textBest1;

global Score1;
global Best1;
init()

%% čtení klávesnice

    function key(~,event) 
        temp_map=squaremap;
        switch event.Key
            case 'uparrow'
                temp_map=moveevent(temp_map(:,4:-1:1)); % Je povolána funkce moveevent, která bere jako argument temp_map, 
                % vytváří pohyb a vydává výslednou matici.
                temp_map=temp_map(:,4:-1:1);
            case 'downarrow'
                temp_map=moveevent(temp_map);
            case 'rightarrow'
                temp_map=temp_map';
                temp_map=moveevent(temp_map(:,4:-1:1));
                temp_map=temp_map(:,4:-1:1);
                temp_map=temp_map';
                
            case 'leftarrow'
                temp_map=moveevent(temp_map');
                temp_map=temp_map';
        end
        if any(any(squaremap~=temp_map)) % Kontroluje se, zda se squaremap liší od temp_map (zda došlo ke změnám na hřišti).
            squaremap=temp_map;
            createNewNum() % Je povolána funkce createNewNum, která vytváří nové číslo na prázdném místě v herním poli.
            drawSquare() % Volána je funkce drawSquare, která aktualizuje zobrazení hracího pole.
        end
    end

%% čtení tlačítek

    function upmove (~,~)
        temp_map= squaremap;
           
                temp_map=moveevent(temp_map(:,4:-1:1));
                temp_map=temp_map(:,4:-1:1);
        
        if any(any(squaremap~=temp_map))
            squaremap=temp_map;
            createNewNum()
            drawSquare()
        end
    end
function downmove (~,~)
        temp_map= squaremap;
            
             temp_map=moveevent(temp_map);
        
        if any(any(squaremap~=temp_map))
            squaremap=temp_map;
            createNewNum()
            drawSquare()
        end
end
    function rightmove (~,~)
        temp_map = squaremap;
        
       temp_map=temp_map';
                temp_map=moveevent(temp_map(:,4:-1:1));
                temp_map=temp_map(:,4:-1:1);
                temp_map=temp_map';
                
                if any(any(squaremap~=temp_map))
            squaremap=temp_map;
            createNewNum()
            drawSquare()
                end
    end 
    function leftmove (~,~)
        temp_map = squaremap;
        
       temp_map=moveevent(temp_map');
                temp_map=temp_map';
        
        if any(any(squaremap~=temp_map))
            squaremap=temp_map;
            createNewNum()
            drawSquare()
        end
    end

%% sčítání prvků
        
    function temp_matrix=moveevent(temp_matrix)
        for i = 1: 4 
            temp_array=temp_matrix(i,:); % Přiřazeno proměnnou temp_array aktuální řádek matice temp_matrix
            temp_array(temp_array==0)=[]; % Všechny položky rovny nule jsou odstraněny z temp_array. 
            % Tím se odstraní prázdné buňky a vytvoří se nové pole bez nulových prvků.

            for j = 1: (length(temp_array)-1)
                if temp_array(j)==temp_array(j+1) % Kontroluje se, zda se aktuální prvek temp_array(j) a 
                    % další prvek temp_array(j+1)rovnají
                    temp_array(j)=temp_array(j)+temp_array(j+1); % Pokud jsou prvky stejné, aktuální prvek se zvýší o hodnotu dalšího prvku.
                    % To představuje sloučení dvou stejných prvků.
                    temp_array(j+1)=0;                              
                end
            end

            temp_array(temp_array==0)=[];  
            temp_array((length(temp_array)+1):4)=0; % Pokud po sloučení a odstranění položek v temp_array zbývají méně než čtyři položky,
            % pak jsou na konci přidány nuly, aby se vrátily k původní velikosti řetězce.
            temp_matrix(i,:)=temp_array; 
        end
    end

%% vytváření nových čísel

    function createNewNum(~,~) % Vytvoření nového čísla (2 nebo 4) v náhodné prázdné buňce matice hry.
        zerospos=find(squaremap==0); % Funkce find hledá všechny indexy prvků v matici squaremap, které jsou nulové.
        % To znamená, že najde všechny prázdné buňky na hřišti.
        temp_pos=zerospos(randi(length(zerospos))); % Pomocí funkce randi(length (zerospos) vybere náhodný index z nalezených prázdných buněk zerospos.
        % Tímto způsobem je vybrána náhodná prázdná buňka pro umístění nového čísla.
        temp_num=randi(2)*2; % Je generováno náhodné číslo 2 nebo 4.
        squaremap(temp_pos)=temp_num; % Nové číslo temp_num je umístěno ve zvolené prázdné buňce temp_pos přiřazením této hodnoty prvku matice squaremap.
    end

%% výběr barev

    function drawSquare(~,~)
        judge()
        score=sum(sum(squaremap)); % Vypočítá se součet všech prvků matice squaremap, což představuje běžný účet hry.
        set(textScore1,'string',num2str(score)); % Aktualizuje se textové pole text Score 1 s běžným účtem převedeným na řádek.
        for i=1:4
            for j=1:4
                temp_num=log(squaremap(i,j))/log(2); % Vypočítá se logaritmus čísla v každé buňce square map (i,j) na základně 2.
                % To je nezbytné pro určení indexu barvy a velikosti písma pro zobrazení čísla.
                temp_num(temp_num<0)=0; % Pokud je hodnota temp_num záporná, je nahrazena 0.
                set(drawSquareHdl(i,j),'backgroundcolor',colorlist(temp_num+1,:)); %Nastaví se barva pozadí prvku drawSquareHdl (i,j) (grafický obdélník) 
                % na základě hodnoty temp_num.
                % colorlist (temp_num+1,:) vybere barvu z předdefinovaného seznamu barev v závislosti na hodnotě temp_num.    
                switch 1
                    case squaremap(i,j)==0,set(drawSquareHdl(i,j),'string','');  % Pokud je hodnota buňky 0, pak textové pole drawSquareHdl (i,j) zůstává prázdné  
                    case squaremap(i,j)<=4&&squaremap(i,j)>0,set(drawSquareHdl(i,j),... 
                                           'string',num2str(squaremap(i,j)),...
                                           'fontsize',fontsizelist(temp_num+1),...
                                           'foregroundcolor', 'w');  % textové pole drawSquareHdl(i,j) je vyplněno číslem square map (i,j), 
                            % velikost písma je nastavena ze seznamu fontsizelist a barva písma je nastavena na bílou.
                    case squaremap(i,j)>4,set(drawSquareHdl(i,j),...
                                          'string',num2str(squaremap(i,j)),...
                                          'fontsize',fontsizelist(temp_num+1),...
                                          'foregroundcolor','w');  
                end
            end
        end
    end

%% kontrola tahů

    function judge(~,~)
        temp_judge_zeros=sum(sum(squaremap==0)); % Počet prázdných buněk v herním poli squaremap se vypočítá počítáním počtu prvků matice rovných 0. 
        % Zde sum(squaremap==0) vytvoří logickou matici, kde 1 označuje prázdnou buňku, a sum(Sum (squaremap== = 0) počítá počet jednotek v této matici. 
        temp_judge_row=any(any(squaremap(1:3,:)==squaremap(2:4,:))); % Kontroluje se, zda jsou v sousedních řádcích (1-3 a 2-4) stejné číselné hodnoty.
        % Funkce any vrátí hodnotu true, pokud je splněna alespoň jedna z podmínek.
        temp_judge_col=any(any(squaremap(:,1:3)==squaremap(:,2:4))); % Kontroluje se, zda jsou v sousedních sloupcích (1-3 a 2-4) stejné číselné hodnoty.
        % Funkce any vrátí hodnotu true, pokud je splněna alespoň jedna z podmínek. 
        if temp_judge_row+temp_judge_col+temp_judge_zeros==0 % Pokud není splněna žádná z podmínek
            % (neexistují žádné prázdné buňky a neexistují žádné sousední buňky se stejnými hodnotami),
            % pak součet temp_judge_row+temp_judge_col+temp_judge_zeros bude 0. V tomto případě:
            gameover = 1;
            gameOver()
        end
    end

%% konec hry

    function gameOver(~, ~)
        best=max([best,score]); 
        save best.mat best
        set(GameOver1,'visible','on');   
        set(GameOver2,'visible','on');   
    end

%% restart

    function restart(~,~)
        best=max([best,score]);
        save best.mat best
        close all;
        clc; clear; init()
    end
%% uicontrol
    function init
        GUI.fig=figure('units','pixels',...
            'position',[350 120 600 450],...
            'Color',[0.9 0.9 0.9],...
            'tag','fig',...
            'Numbertitle','off',...
            'menubar','none',...
            'name','2048Game');
           
        
        drawBkgHdl=uicontrol('parent',GUI.fig,...
            'style','text',...
            'string','',...
            'position',[0 0 400 575],...
            'backgroundcolor',[0.9 0.9 0.9]);
        
        drawSquareBkgHdl=uicontrol('parent',GUI.fig,...
            'style','text',...
            'string','',...
            'position',[20 20 360 360],...
            'backgroundcolor',[0.7333 0.6784 0.6275]);
        
        for i=1:4      % line length
            for j=1:4  % column length
                drawSquareHdl(i,j)=uicontrol('parent',GUI.fig,...
                        'style','edit',...
                        'string','',...
                        'horizontalalign','center',...
                        'FontWeight','bold',...
                        'position',[30+(i-1)*(350/4) 30+(j-1)*(350/4) 77.5 77.5],...
                        'backgroundcolor',[0.8039 0.7569 0.7059]);
            end
        end
        
        Restart1=uicontrol('parent',GUI.fig,...
            'style','pushbutton',...
            'string','New Game',...
            'FontWeight','bold',...
            'horizontalalign','center',...
            'position',[415 30 140 50],...
            'backgroundcolor',[0.5608 0.4784 0.4000],...
            'foregroundcolor','w',...
            'fontsize',16,...
            'callback',@restart);
        
        Text2048=uicontrol('parent',GUI.fig,...
            'style','text',...
            'string','Game 2048',...
            'horizontalalign','left',...
            'position',[120 380 200 50],...
            'backgroundcolor',[0.9 0.9 0.9],...
            'foregroundcolor',[0.4667 0.4314 0.3961],...
            'FontWeight','bold',...
            'fontsize',30);
        
        Score1=uicontrol('parent',GUI.fig,...
            'style','text',...
            'string','SCORE',...
            'horizontalalign','center',...
            'position',[410 310 80 70],...
            'backgroundcolor',[0.7333 0.6784 0.6275],...
            'foregroundcolor',[0.9333 0.8941 0.8549],...
            'FontWeight','bold',...
            'fontsize',15);
        
        Best1=uicontrol('parent',GUI.fig,...
            'style','text',...
            'string','BEST',...
            'horizontalalign','center',...
            'position',[500 310 80 70],...
            'backgroundcolor',[0.7333 0.6784 0.6275],...
            'foregroundcolor',[0.9333 0.8941 0.8549],...
            'FontWeight','bold',...
            'fontsize',15);
        
        
        textScore1=uicontrol('parent',GUI.fig,...
            'style','text',...
            'string','0',...
            'horizontalalign','center',...
            'position',[410 310 80 40],...
            'backgroundcolor',[0.7333 0.6784 0.6275],...
            'foregroundcolor','w',...
            'FontWeight','bold',...
            'fontsize',14);
        
        textBest1=uicontrol('parent',GUI.fig,...
            'style','text',...
            'string','0',...
            'horizontalalign','center',...
            'position',[500 310 80 40],...
            'backgroundcolor',[0.7333 0.6784 0.6275],...
            'foregroundcolor','w',...
            'FontWeight','bold',...
            'fontsize',14);
                 
        
        GameOver1=uicontrol('parent',GUI.fig,...
            'style','text',...
            'string','Game Over',...
            'horizontalalign','center',...
            'position',[100 180 300 100],...
            'backgroundcolor',[0.6392	0.5804	0.5020],...
            'foregroundcolor',[0.1 0.1 0.3], ...
            'FontWeight','bold',...
            'visible','off',...
            'fontsize',20);
                
        GameOver2=uicontrol('parent',GUI.fig,...
            'style','pushbutton',...
            'string','restart',...
            'horizontalalign','center',...
            'position',[205 190 100 30],...
            'backgroundcolor',[0.7333 0.6784 0.6275],...
            'foregroundcolor','w',...
            'FontWeight','bold',...
            'visible','off',...
            'callback',@restart,...
            'fontsize',10); 
     
        controlUp = uicontrol('parent',GUI.fig,...
            'style','pushbutton',...
            'string','▲',...
            'FontWeight','bold',...
            'horizontalalign','center',...
            'foregroundcolor','w',...
            'position',[460 200 50 30],...
            'backgroundcolor',[0.5608 0.4784 0.4000],...
            'fontsize',16,...
            'callback',@upmove);
        
        controlDown = uicontrol('parent',GUI.fig,...
            'style','pushbutton',...
            'string','▼',...
            'FontWeight','bold',...
            'horizontalalign','center',...
            'foregroundcolor','w',...
            'position',[460 170 50 30],...
            'backgroundcolor',[0.5608 0.4784 0.4000],...
            'fontsize',16,...
            'callback',@downmove);
        
        controlRight = uicontrol('parent',GUI.fig,...
            'style','pushbutton',...
            'string','▶',...
            'FontWeight','bold',...
            'horizontalalign','center',...
            'foregroundcolor','w',...
            'position',[515 170 50 30],...
            'backgroundcolor',[0.5608 0.4784 0.4000],...
            'fontsize',16,...
            'callback',@rightmove);
        
        controlLeft = uicontrol('parent',GUI.fig,...
            'style','pushbutton',...
            'string','◀',...
            'FontWeight','bold',...
            'horizontalalign','center',...
            'foregroundcolor','w',...
            'position',[405 170 50 30],...
            'backgroundcolor',[0.5608 0.4784 0.4000],...
            'fontsize',16,...
            'callback',@leftmove);
        
        
%% uložení výsledku do souboru

        if ~exist('best.mat')
            best=0;
            save best.mat best;
        end
        data=load('best.mat');
        best=data.best;
        colorlist=[ 0.8039    0.7569    0.7059
                    0.9000    0.9000    0.9000
                    0.8000    0.8000    0.8000
                    0.7000    0.7000    0.7000
                    0.6000    0.6000    0.6000
                    0.5000    0.5000    0.5000
                    0.4500    0.4500    0.4500
                    0.4000    0.4000    0.4000
                    0.3500    0.3500    0.3500
                    0.3000    0.3000    0.3000
                    0.2500    0.2500    0.2500
                    0.2000    0.2000    0.2000
                    0.1500    0.1500    0.1500
                    0.1000    0.1000    0.1000
                    0.0700    0.0700    0.0700
                    0.0500    0.0500    0.0500
                    0.0200    0.0200    0.0200
                    0.0100    0.0100    0.0100];
        fontsizelist=[12 24 24 24 24 24 24 24 24 24 22 22 22 22 20 20 20 16];
        set(textBest1,'string',num2str(best));
        squaremap=zeros(4,4);
        createNewNum()
        createNewNum()
        drawSquare()
        set(gcf, 'KeyPressFcn', @key); 
    end
end